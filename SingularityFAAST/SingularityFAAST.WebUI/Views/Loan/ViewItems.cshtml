
@using SingularityFAAST.Core.DataTransferObjects
@using SingularityFAAST.Core.Entities
@model IEnumerable<SingularityFAAST.Core.DataTransferObjects.LoansClientsInventoryDTO>

@{
    ViewBag.Title = "ViewItems";
}

<h2>Loan Items</h2>
@*<div class="col-md-4 col-md-offset-4"></div>*@  @*This was to center the title*@

<br />

<div class="row">
    <div class="col-md-12">
        
        @*@Html.ActionLink("Renew Entire Loan", "RenewLn", null, new {@class = "btn btn-primary"})*@ @*Currently, this creates a new loan for the month.*@
        @using (Html.BeginForm("RenewLn", "Loan", FormMethod.Post, new {@class = "form-inline col-md-1"}))
        {
            foreach (var i in Model)
            {
                <input type="hidden" value="@i.LoanMasterId" name="LoanMasterId"/>
            }
            <input type="submit" class="btn btn-primary" name="rnwLoan" value='Renew Loan'/>
        }

        @*@Html.ActionLink("Edit Loan", "EditLn", null, new {@class = "btn btn-primary"})*@ @*Pass the Loan number to auto-populate details on EditLn*@
        @foreach (var q in Model)
        {
            if (q.IsActive)
            {
                using (Html.BeginForm("EditLoan", "Loan", FormMethod.Post, new { @class = "form-inline col-md-1" }))
                {
                    foreach (var i in Model)
                    {
                        <input type="hidden" value="@i.LoanMasterId" name="LoanMasterId" />
                    }
                    <input type="submit" class="btn btn-primary" name="edtLoan" value='Edit Loan' />
                }
            }
            break;
        }
    </div>
</div>
<hr/>

<div class="row">
    <div class="col-md-12">
        <div class="col-md-10 ">
            <br/>
            @*make this a list group (see bootstrap components) *@
            <i class="fa fa-times fa-lg text-danger"></i> Select any Item to remove it from the Loan. If the X is not visible, the Loan cannot be edited.<br/><br/>
            <i class="fa fa-check fa-lg text-info"></i> Select any active Item to check in. If the check is not visible, the Item has been checked in.<br/><br/>
            @*<h5><i class="fa fa-refresh fa-lg text-success"></i> Select any item to renew it.</h5>*@
            <br/>
            <i class="fa fa-exclamation-circle fa-lg text-danger"></i> Indicates an overdue item.
            <br/><br/><br/>
        </div>
    </div>

</div>
@*<div class="row col-md-12">
    <h3 >Information for Loan:</h3>
        </div>*@
<div class="row">
    <h4>
        @foreach (LoansClientsInventoryDTO item in Model)
            {
            <span class="col-md-2">Loan #: @Html.DisplayFor(x => item.LoanNumber)</span>
            <span class="col-md-3">Name: @Html.DisplayFor(x => item.LastName), @Html.DisplayFor(x => item.FirstName)</span>
            <span class="col-md-3">Phone: @Html.DisplayFor(x => item.CellPhone)  </span>
            <span class="col-md-3">Email: @Html.DisplayFor(x => item.Email)</span>
            break;  //or will print client for each item in client loan
        }

    </h4>
</div>
<hr />
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <table class="table table-striped table-hover table-condensed">
                <thead>
                    <tr>
                        <th>
                            Select
                        </th>
                        <th>
                            Item ID
                        </th>
                        <th>
                            Item Name
                        </th>
                        <th>
                            Manufacturer
                        </th>
                        <th>
                            Date Loaned
                        </th>
                        <th>
                            Item Date Due
                        </th>
                        <th>
                            Notes on the Loan
                        </th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <div style="width: 100px;">
                                    @*@Html.ActionLink("Select", "", new {id = item.LoanId})*@ @*Could be checkbox. Not a link, just selects, for one of three possible functions*@
                                    @*@Html.RadioButton("selectNum", false)*@

                                    @*Remove Item from loan*@
                                    @if (item.IsActive)
                                    {
                                        using (Html.BeginForm("CancelItem", "Loan", FormMethod.Post, new { @class = "form-inline" }))
                                        {
                                            <input type="hidden" name="InventoryItemId" value="@item.InventoryItemId" />
                                            <button type="submit" style="float: left" name="viewButton" value="1"><i class="fa fa-times fa-lg text-danger"></i></button> @*remove item*@
                                        }
                                    }

                                    @*Checkin Item on its own*@
                                    @*true / false - if loan is active and item is checked out.  If an item is checked in and is available, no check mark*@
                                    @if (item.IsActive && (!item.Availability))
                                    {
                                        using (Html.BeginForm("CheckItem", "Loan", FormMethod.Post, new { @class = "form-inline" }))
                                        {
                                            <input type="hidden" name="InventoryItemId" value="@item.InventoryItemId" />
                                            <button type="submit" style="float: left" name="checkButton" value="1"><i class="fa fa-check fa-lg text-info"></i></button> @*check in the item, record client outcome, damages etc.*@
                                        }
                                    }

                                    @*Renew Item (this creates new loan with just this item)*@
                                    @*@using (Html.BeginForm("RenewItem", "Loan", FormMethod.Post, new { @class = "form-inline" }))
                                    {
                                        <input type="hidden" name="InventoryItemId" value="@item.InventoryItemId" />
                                        <button type="submit" name="viewButton" value="2"><i class="fa fa-refresh fa-lg text-success"></i></button> @*renew item (create new loan) 
                                    }*@
                                </div>
                            </td>
                            <td>
                                <div style="width: 110px;">
                                    12-IN-@item.InventoryItemId
                                    @if ((item.LoanDate.AddDays(28) < DateTime.Today.AddDays(1)) && (item.IsActive && !(item.Availability)))
                                    {
                                        <i class="fa fa-exclamation-circle fa-lg text-danger"></i>
                                    }
                                </div>
                            </td>
                            <td>
                                @item.ItemName
                            </td>
                            <td>
                                @item.Manufacturer
                            </td>
                            <td>
                                @item.LoanDate.ToString("MMMM dd, yyyy")  @*Date item added to loan - may be the same day loan was created*@
                            </td>
                            <td>
                                @item.LoanDate.AddDays(28).ToString("MMMM dd, yyyy") @* + 28 days *@
                            </td>
                            <td>
                                <div style="width: 300px;">
                                    @item.LoanNotes
                                </div>
                            </td>
                        </tr>

                    }

                </tbody>
            </table>
        </div>
    </div>
    <p>
        @Html.ActionLink("Back to List", "Index", null, null)
    </p>
</div>
